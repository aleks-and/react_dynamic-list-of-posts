{"version":3,"sources":["components/User/User.js","components/Comment/Comment.js","components/CommentList/CommentList.js","components/Post/Post.js","components/PostList/PostList.js","components/Header/Header.js","App.js","index.js"],"names":["User","_ref","name","email","address","react_default","a","createElement","className","city","Comment","comment","body","components_User_User","CommentList","comments","map","components_Comment_Comment","key","id","Post","post","title","user","Fragment","components_CommentList_CommentList","PostList","posts","components_Post_Post","Header","isLoading","isLoaded","hasError","getData","buttonText","onClick","disabled","usersUrl","postsUrl","commentsUrl","App","state","preparedPosts","loadData","Promise","all","fetch","then","_ref2","Object","slicedToArray","usersData","postsData","commentsData","json","_this","setState","_ref3","_ref4","joinAllData","catch","users","_objectSpread","find","userId","filter","postId","_this$state","this","components_Header_Header","components_PostList_PostList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.6f0c7d03.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst User = ({ name, email, address }) => (\r\n  <div className=\"user\">\r\n    <p>User name: {name}</p>\r\n    <p>User email: {email}</p>\r\n    {address && (\r\n      <p>User city: {address.city}</p>\r\n    )}\r\n  </div>\r\n)\r\n\r\nexport default User;","import React from 'react';\r\n\r\nimport './Comment.css';\r\nimport User from '../User/User';\r\n\r\nconst Comment = ({ comment }) => {\r\n  const { name, email, body } = comment;\r\n\r\n  return (\r\n    <div className=\"comment-list__item\">\r\n      <p>{body}</p>\r\n      <User name={name} email={email} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comment;","import React from 'react';\r\n\r\nimport Comment from '../Comment/Comment';\r\n\r\nconst CommentList = ({ comments }) => (\r\n  <div className=\"comment-list\">\r\n    <h3>Comments:</h3>\r\n    {comments.map(comment => (\r\n      <Comment comment={comment} key={comment.id} />\r\n    ))}\r\n  </div>\r\n)\r\n\r\nexport default CommentList;","import React from 'react';\r\n\r\nimport User from '../User/User';\r\nimport CommentList from '../CommentList/CommentList';\r\n\r\nconst Post = ({ post }) => {\r\n  const {\r\n    title,\r\n    body,\r\n    user,\r\n    comments\r\n  } = post;\r\n  \r\n  const {\r\n    name,\r\n    email,\r\n    address\r\n  } = user;\r\n\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      <p>{body}</p>\r\n      <User\r\n        name={name}\r\n        email={email}\r\n        address={address}\r\n      />\r\n      <CommentList comments={comments} />\r\n      <hr />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\n\r\nimport Post from '../Post/Post';\r\n\r\nconst PostList = ({ posts }) => (\r\n  <div className=\"post-list\">\r\n    {posts.map(post => (\r\n      <Post post={post} key={post.id} />\r\n    ))}\r\n  </div>\r\n)\r\n\r\nexport default PostList;","import React from 'react';\n\nconst Header = ({\n  isLoading,\n  isLoaded,\n  hasError,\n  getData\n}) => {\n  const buttonText = isLoading\n    ? 'Okay, okay, already loading...'\n    : 'GET POSTS RIGHT NOW!';\n\n  return (\n    <div className=\"container mb-5\">\n    <div className=\"row\">\n      <header className=\"header col text-center\">\n        <h1 className=\"mb-5\">Dynamic list of posts</h1>\n        {!isLoaded &&\n          <button\n            onClick={getData}\n            disabled={isLoading}\n          >\n            {buttonText}\n          </button>\n        }\n        {hasError && \n          <h2 className=\"mt-3\">\n            Some kind of mistake, nevermind...\n            <br />\n            just kick the admin.\n          </h2>\n        }\n      </header>\n    </div>\n  </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\r\n\r\nimport './App.css';\r\n\r\nimport PostList from './components/PostList/PostList';\r\nimport Header from './components/Header/Header';\r\n\r\nconst usersUrl = 'https://jsonplaceholder.typicode.com/users';\r\nconst postsUrl = 'https://jsonplaceholder.typicode.com/posts';\r\nconst commentsUrl = 'https://jsonplaceholder.typicode.com/comments';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    preparedPosts: [],\r\n    isLoading: false,\r\n    isLoaded: false,\r\n    hasError: false,\r\n  }\r\n\r\n  loadData = () => (\r\n    Promise.all([\r\n      fetch(usersUrl),\r\n      fetch(postsUrl),\r\n      fetch(commentsUrl),\r\n    ])\r\n      .then(([usersData, postsData, commentsData]) => (\r\n        Promise.all([usersData.json(), postsData.json(), commentsData.json()])\r\n      ))\r\n  )\r\n\r\n  getData = () => {\r\n    this.setState({\r\n      isLoading: true,\r\n      isLoaded: false,\r\n      hasError: false,\r\n    });\r\n\r\n    this.loadData()\r\n      .then(([usersData, postsData, commentsData]) => {\r\n        this.setState({\r\n          preparedPosts: this.joinAllData(postsData, commentsData, usersData),\r\n          isLoading: false,\r\n          isLoaded: true,\r\n        });\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          hasError: true,\r\n          isLoading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  joinAllData = (posts, comments, users) => (\r\n    posts.map(post => ({\r\n      ...post,\r\n      user: users.find(user => user.id === post.userId),\r\n      comments: comments.filter(comment => comment.postId === post.id),\r\n    }))\r\n  )\r\n\r\n  render() {\r\n    const {\r\n      preparedPosts,\r\n      isLoading,\r\n      isLoaded,\r\n      hasError\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Header\r\n          isLoading={isLoading}\r\n          isLoaded={isLoaded}\r\n          hasError={hasError}\r\n          getData={this.getData}\r\n        />\r\n        <PostList posts={preparedPosts} />\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}